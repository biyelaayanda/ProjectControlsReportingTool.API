# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

# All files
[*]
indent_style = space
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
end_of_line = crlf

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# JSON files
[*.{json,json5}]
indent_size = 2

# YAML files
[*.{yml,yaml}]
indent_size = 2

# Markdown files
[*.md]
trim_trailing_whitespace = false

# Web files
[*.{htm,html,js,ts,tsx,css,sass,scss,less,svg,vue}]
indent_size = 2

# Batch files
[*.{cmd,bat}]
end_of_line = crlf

# Shell scripts
[*.sh]
end_of_line = lf

# .NET Code Style Rules
[*.{cs,vb}]

# Organize usings
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# this. preferences
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:suggestion
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion

# C# Code Style Rules
[*.cs]

# var preferences
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion

# C# Formatting Rules

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

# .NET Naming Conventions

# Pascal case for classes, structs, interfaces, enums, delegates, events, methods, properties
dotnet_naming_rule.pascal_case_for_public_and_protected_members.severity = warning
dotnet_naming_rule.pascal_case_for_public_and_protected_members.symbols = public_and_protected_symbols
dotnet_naming_rule.pascal_case_for_public_and_protected_members.style = pascal_case_style

dotnet_naming_symbols.public_and_protected_symbols.applicable_kinds = class,struct,interface,enum,delegate,event,method,property
dotnet_naming_symbols.public_and_protected_symbols.applicable_accessibilities = public,protected

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Camel case for private fields
dotnet_naming_rule.camel_case_for_private_fields.severity = warning
dotnet_naming_rule.camel_case_for_private_fields.symbols = private_field_symbols
dotnet_naming_rule.camel_case_for_private_fields.style = camel_case_style

dotnet_naming_symbols.private_field_symbols.applicable_kinds = field
dotnet_naming_symbols.private_field_symbols.applicable_accessibilities = private

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Underscore prefix for private fields (alternative style)
dotnet_naming_rule.underscore_prefix_for_private_fields.severity = suggestion
dotnet_naming_rule.underscore_prefix_for_private_fields.symbols = private_field_symbols
dotnet_naming_rule.underscore_prefix_for_private_fields.style = underscore_prefix_style

dotnet_naming_style.underscore_prefix_style.required_prefix = _
dotnet_naming_style.underscore_prefix_style.capitalization = camel_case

# Interface names should be prefixed with 'I'
dotnet_naming_rule.interface_should_be_prefixed_with_i.severity = warning
dotnet_naming_rule.interface_should_be_prefixed_with_i.symbols = interface_symbols
dotnet_naming_rule.interface_should_be_prefixed_with_i.style = prefix_interface_interface_with_i_style

dotnet_naming_symbols.interface_symbols.applicable_kinds = interface
dotnet_naming_symbols.interface_symbols.applicable_accessibilities = *

dotnet_naming_style.prefix_interface_interface_with_i_style.required_prefix = I
dotnet_naming_style.prefix_interface_interface_with_i_style.capitalization = pascal_case

# Constants should be ALL_CAPS
dotnet_naming_rule.constants_should_be_all_caps.severity = warning
dotnet_naming_rule.constants_should_be_all_caps.symbols = constant_symbols
dotnet_naming_rule.constants_should_be_all_caps.style = all_caps_style

dotnet_naming_symbols.constant_symbols.applicable_kinds = field,local
dotnet_naming_symbols.constant_symbols.required_modifiers = const

dotnet_naming_style.all_caps_style.capitalization = all_upper
dotnet_naming_style.all_caps_style.word_separator = _
