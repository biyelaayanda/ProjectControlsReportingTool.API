// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectControlsReportingTool.API.Data;

#nullable disable

namespace ProjectControlsReportingTool.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250831124539_AddPushNotificationSubscription_Fixed")]
    partial class AddPushNotificationSubscription_Fixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackDeliveryFailure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Channel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FailedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextRetryAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("OriginalPayloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("SlackMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WebhookConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("SlackMessageId");

                    b.HasIndex("UserId");

                    b.HasIndex("WebhookConfigId");

                    b.ToTable("SlackDeliveryFailures");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackIntegrationStat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("AverageResponseTime")
                        .HasColumnType("time");

                    b.Property<string>("Channel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorSummaryJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailedDeliveries")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastMessageSent")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("MaxResponseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("MinResponseTime")
                        .HasColumnType("time");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SuccessfulDeliveries")
                        .HasColumnType("int");

                    b.Property<int>("TotalMessages")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WebhookConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WebhookConfigId");

                    b.ToTable("SlackIntegrationStats");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlocksJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Channel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconEmoji")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MessageId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("ResponseTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreadTs")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("UnfurlLinks")
                        .HasColumnType("bit");

                    b.Property<bool>("UnfurlMedia")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("WebhookConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.HasIndex("UserId");

                    b.HasIndex("WebhookConfigId");

                    b.ToTable("SlackMessages");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackNotificationTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Channel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultAttachmentsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultBlocksJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IconEmoji")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("TextTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UseAttachments")
                        .HasColumnType("bit");

                    b.Property<bool>("UseBlocks")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("WebhookConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WebhookConfigId");

                    b.ToTable("SlackNotificationTemplates");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackWebhookConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomSettingsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultChannel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DefaultIconEmoji")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DefaultUsername")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EnabledNotificationsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UseAttachments")
                        .HasColumnType("bit");

                    b.Property<bool>("UseBlocks")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SlackWebhookConfigs");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsDeliveryFailure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FailedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextRetryAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("OriginalPayloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<Guid?>("TeamsMessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WebhookConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("TeamsMessageId");

                    b.HasIndex("UserId");

                    b.HasIndex("WebhookConfigId");

                    b.ToTable("TeamsDeliveryFailures");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsIntegrationStat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("AverageResponseTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorSummaryJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FailedDeliveries")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastMessageSent")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("MaxResponseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("MinResponseTime")
                        .HasColumnType("time");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SuccessfulDeliveries")
                        .HasColumnType("int");

                    b.Property<int>("TotalMessages")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WebhookConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WebhookConfigId");

                    b.ToTable("TeamsIntegrationStats");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("ResponseTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int");

                    b.Property<string>("ThemeColor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UseAdaptiveCard")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WebhookConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.HasIndex("UserId");

                    b.HasIndex("WebhookConfigId");

                    b.ToTable("TeamsMessages");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsNotificationTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultActionsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultFactsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MessageTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("ThemeColor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TitleTemplate")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UseAdaptiveCard")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WebhookConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WebhookConfigId");

                    b.ToTable("TeamsNotificationTemplates");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsWebhookConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomSettingsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultFormat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DefaultThemeColor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EnabledNotificationsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TeamsWebhookConfigs");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.EmailQueue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BccEmails")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CcEmails")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("HtmlBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxRetries")
                        .HasColumnType("int");

                    b.Property<string>("MessageId")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TextBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmail")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ToName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("Priority");

                    b.HasIndex("Status", "ScheduledDate");

                    b.ToTable("EmailQueue");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HtmlContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemTemplate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUsed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PlainTextContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviewData")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TemplateType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UsageCount")
                        .HasColumnType("int");

                    b.Property<string>("Variables")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IsActive");

                    b.HasIndex("IsSystemTemplate");

                    b.HasIndex("LastUsed");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TemplateType");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("UsageCount");

                    b.HasIndex("Version");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActionText")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActionUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPushSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("MaxRetries")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("NotificationTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RelatedReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTemplateId");

                    b.HasIndex("RelatedReportId");

                    b.HasIndex("SenderId");

                    b.HasIndex("Status");

                    b.HasIndex("RecipientId", "ReadDate");

                    b.HasIndex("Type", "CreatedDate");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalDetails")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Channel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsError")
                        .HasColumnType("bit");

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusMessage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId", "CreatedDate");

                    b.ToTable("NotificationHistory");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationPreference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("EmailEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("FrequencyMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("InAppEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("PreferredTime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("PushEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("SmsEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "NotificationType")
                        .IsUnique();

                    b.ToTable("NotificationPreferences");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("FailureCount")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastTriggeredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxRetries")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SecretKey")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.PrimitiveCollection<string>("SubscribedTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuccessCount")
                        .HasColumnType("int");

                    b.Property<int>("TimeoutSeconds")
                        .HasColumnType("int");

                    b.Property<string>("WebhookUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IsActive");

                    b.HasIndex("WebhookUrl")
                        .IsUnique();

                    b.ToTable("NotificationSubscriptions");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HtmlTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TextTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Variables")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Type", "IsActive");

                    b.ToTable("NotificationTemplates");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.PushNotificationSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DeviceName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EnabledForAnnouncements")
                        .HasColumnType("bit");

                    b.Property<bool>("EnabledForApprovals")
                        .HasColumnType("bit");

                    b.Property<bool>("EnabledForDeadlines")
                        .HasColumnType("bit");

                    b.Property<bool>("EnabledForMentions")
                        .HasColumnType("bit");

                    b.Property<bool>("EnabledForReminders")
                        .HasColumnType("bit");

                    b.Property<bool>("EnabledForReports")
                        .HasColumnType("bit");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailedNotifications")
                        .HasColumnType("int");

                    b.Property<bool>("HasPermission")
                        .HasColumnType("bit");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastError")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("LastUsed")
                        .HasColumnType("datetime2");

                    b.Property<string>("MinimumPriority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OperatingSystem")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("P256dhKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SuccessfulNotifications")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DeviceType");

                    b.HasIndex("Endpoint")
                        .IsUnique();

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("HasPermission");

                    b.HasIndex("IsActive");

                    b.HasIndex("LastUsed");

                    b.HasIndex("UserId");

                    b.HasIndex("DeviceType", "IsActive");

                    b.HasIndex("UserId", "IsActive");

                    b.ToTable("PushNotificationSubscriptions");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GMApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("ManagerApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("RejectedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RejectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReportNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("RejectedBy");

                    b.HasIndex("TemplateId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.ReportAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStage")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OriginalFileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UploadedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UploadedByName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UploadedByRole")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("ReportAttachments");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.ReportSignature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("ReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SignatureFilePath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SignatureType")
                        .HasColumnType("int");

                    b.Property<DateTime>("SignedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.HasIndex("UserId");

                    b.ToTable("ReportSignatures");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.ReportTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContentTemplate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int?>("DefaultDepartment")
                        .HasColumnType("int");

                    b.Property<int?>("DefaultDueDays")
                        .HasColumnType("int");

                    b.Property<string>("DefaultPriority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DefaultTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Instructions")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemTemplate")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("LastModifiedBy");

                    b.ToTable("ReportTemplates");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.SmsMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Carrier")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(10,4)");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryAttempts")
                        .HasColumnType("int");

                    b.Property<bool>("DeliveryReceiptRequested")
                        .HasColumnType("bit");

                    b.Property<string>("Encoding")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalMessageId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsSensitive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUrgent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastDeliveryAttempt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1600)
                        .HasColumnType("nvarchar(1600)");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid?>("RelatedReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RetryAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SegmentCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("ExternalMessageId");

                    b.HasIndex("Recipient");

                    b.HasIndex("RelatedReportId");

                    b.HasIndex("SentAt");

                    b.HasIndex("Status");

                    b.HasIndex("TemplateId");

                    b.HasIndex("Provider", "SentAt");

                    b.HasIndex("Status", "IsUrgent");

                    b.HasIndex("UserId", "SentAt");

                    b.ToTable("SmsMessages");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.SmsStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AverageDeliveryTime")
                        .HasColumnType("float");

                    b.Property<string>("CountryStats")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("DeliveryRate")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ErrorBreakdown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessagesByType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessagesDelivered")
                        .HasColumnType("int");

                    b.Property<int>("MessagesFailed")
                        .HasColumnType("int");

                    b.Property<int>("MessagesPending")
                        .HasColumnType("int");

                    b.Property<int>("MessagesSent")
                        .HasColumnType("int");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(10,4)");

                    b.Property<int>("UniqueRecipients")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.HasIndex("Provider");

                    b.HasIndex("Date", "Provider")
                        .IsUnique();

                    b.ToTable("SmsStatistics");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.SmsTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DefaultIsUrgent")
                        .HasColumnType("bit");

                    b.Property<string>("DefaultMessageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DefaultPriority")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemTemplate")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxRenderedLength")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tags")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasMaxLength(1600)
                        .HasColumnType("nvarchar(1600)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UsageCount")
                        .HasColumnType("int");

                    b.Property<string>("Variables")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IsActive");

                    b.HasIndex("IsSystemTemplate");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("Category", "IsActive");

                    b.ToTable("SmsTemplates");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.UserNotificationPreference", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("EmailEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("MinimumPriority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("PushEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("QuietHoursEnd")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("QuietHoursStart")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("RealTimeEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("SmsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmailEnabled");

                    b.HasIndex("NotificationType");

                    b.HasIndex("RealTimeEnabled");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "NotificationType")
                        .IsUnique();

                    b.ToTable("UserNotificationPreferences");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackDeliveryFailure", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.SlackMessage", "SlackMessage")
                        .WithMany()
                        .HasForeignKey("SlackMessageId");

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.SlackWebhookConfig", "WebhookConfig")
                        .WithMany()
                        .HasForeignKey("WebhookConfigId");

                    b.Navigation("SlackMessage");

                    b.Navigation("User");

                    b.Navigation("WebhookConfig");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackIntegrationStat", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.SlackWebhookConfig", "WebhookConfig")
                        .WithMany()
                        .HasForeignKey("WebhookConfigId");

                    b.Navigation("User");

                    b.Navigation("WebhookConfig");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackMessage", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.SlackWebhookConfig", "WebhookConfig")
                        .WithMany("Messages")
                        .HasForeignKey("WebhookConfigId");

                    b.Navigation("Report");

                    b.Navigation("User");

                    b.Navigation("WebhookConfig");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackNotificationTemplate", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.SlackWebhookConfig", "WebhookConfig")
                        .WithMany("Templates")
                        .HasForeignKey("WebhookConfigId");

                    b.Navigation("User");

                    b.Navigation("WebhookConfig");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackWebhookConfig", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsDeliveryFailure", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.TeamsMessage", "TeamsMessage")
                        .WithMany()
                        .HasForeignKey("TeamsMessageId");

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.TeamsWebhookConfig", "WebhookConfig")
                        .WithMany()
                        .HasForeignKey("WebhookConfigId");

                    b.Navigation("TeamsMessage");

                    b.Navigation("User");

                    b.Navigation("WebhookConfig");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsIntegrationStat", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.TeamsWebhookConfig", "WebhookConfig")
                        .WithMany()
                        .HasForeignKey("WebhookConfigId");

                    b.Navigation("User");

                    b.Navigation("WebhookConfig");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsMessage", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.TeamsWebhookConfig", "WebhookConfig")
                        .WithMany("Messages")
                        .HasForeignKey("WebhookConfigId");

                    b.Navigation("Report");

                    b.Navigation("User");

                    b.Navigation("WebhookConfig");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsNotificationTemplate", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Data.Entities.TeamsWebhookConfig", "WebhookConfig")
                        .WithMany("Templates")
                        .HasForeignKey("WebhookConfigId");

                    b.Navigation("User");

                    b.Navigation("WebhookConfig");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsWebhookConfig", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.AuditLog", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Report", "Report")
                        .WithMany("AuditLogs")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.EmailQueue", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("NotificationId");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.EmailTemplate", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "LastUpdater")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("LastUpdater");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.Notification", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.NotificationTemplate", null)
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationTemplateId");

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Report", "RelatedReport")
                        .WithMany()
                        .HasForeignKey("RelatedReportId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Recipient");

                    b.Navigation("RelatedReport");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationHistory", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Notification", "Notification")
                        .WithMany("History")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationPreference", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationSubscription", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationTemplate", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "Modifier")
                        .WithMany()
                        .HasForeignKey("ModifiedBy");

                    b.Navigation("Creator");

                    b.Navigation("Modifier");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.PushNotificationSubscription", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.Report", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "Creator")
                        .WithMany("CreatedReports")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "RejectedByUser")
                        .WithMany()
                        .HasForeignKey("RejectedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.ReportTemplate", "Template")
                        .WithMany("ReportsCreatedFromTemplate")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Creator");

                    b.Navigation("RejectedByUser");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.ReportAttachment", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Report", "Report")
                        .WithMany("Attachments")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "UploadedByUser")
                        .WithMany()
                        .HasForeignKey("UploadedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Report");

                    b.Navigation("UploadedByUser");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.ReportSignature", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Report", "Report")
                        .WithMany("Signatures")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany("Signatures")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.ReportTemplate", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "LastModifiedByUser")
                        .WithMany()
                        .HasForeignKey("LastModifiedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Creator");

                    b.Navigation("LastModifiedByUser");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.SmsMessage", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.Report", "RelatedReport")
                        .WithMany()
                        .HasForeignKey("RelatedReportId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.SmsTemplate", "Template")
                        .WithMany("SmsMessages")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RelatedReport");

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.SmsTemplate", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");

                    b.Navigation("UpdatedByUser");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.UserNotificationPreference", b =>
                {
                    b.HasOne("ProjectControlsReportingTool.API.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.SlackWebhookConfig", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Templates");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Data.Entities.TeamsWebhookConfig", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Templates");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.Notification", b =>
                {
                    b.Navigation("History");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.NotificationTemplate", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.Report", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("AuditLogs");

                    b.Navigation("Signatures");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.ReportTemplate", b =>
                {
                    b.Navigation("ReportsCreatedFromTemplate");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.SmsTemplate", b =>
                {
                    b.Navigation("SmsMessages");
                });

            modelBuilder.Entity("ProjectControlsReportingTool.API.Models.Entities.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("CreatedReports");

                    b.Navigation("Signatures");
                });
#pragma warning restore 612, 618
        }
    }
}
